{"version":3,"file":"kidd-utils.umd.js","sources":["../libs/array.ts","../libs/core.ts","../libs/is.ts","../libs/storage.ts"],"sourcesContent":["/*\r\n * 数组相关处理方法\r\n * author: zhijie\r\n */\r\n\r\n/*\r\n * 数组去重\r\n * @arr: 需要去重的数组 @valueField: 用于去重的字段-数组里面内容是对象的则必填\r\n */\r\nexport const uniqueArray = (arr: unknown[], valueField?: string): unknown[] => {\r\n  const res: unknown[] = [];\r\n  if (!Array.isArray(arr) || !arr || !arr.length) return res;\r\n  const map = new Map(); // 记录已有数据\r\n\r\n  for (let i = 0, len = arr.length; i < len; i++) {\r\n    const item: unknown = arr[i];\r\n    // 对象类型处理\r\n    if (item instanceof Object) {\r\n      if (!valueField) return arr; // 对象但是不存在用于判断的字符直接返回\r\n      if (!map.has((item as Record<string, unknown>)[valueField])) {\r\n        res.push(item);\r\n        map.set((item as Record<string, unknown>)[valueField], true);\r\n      }\r\n    }\r\n    // 普通对象处理\r\n    else {\r\n      if (!map.has(item)) {\r\n        res.push(item);\r\n        map.set(item, true);\r\n      }\r\n    }\r\n  }\r\n\r\n  return res;\r\n};\r\n\r\n/*\r\n * 获取数组第一个数据，没有数据则返回默认值\r\n * @arr:需要处理的数组 @defaultVal:默认值\r\n */\r\nexport const getFirst = (arr: unknown[] = [], defaultVal?: unknown): unknown => {\r\n  let res: unknown = defaultVal ?? \"\";\r\n  if (arr?.length) {\r\n    res = arr[0];\r\n  }\r\n  return res;\r\n};\r\n\r\n/*\r\n * 获取数组最后一个数据，没有数据则返回默认值\r\n * @arr:需要处理的数组 @defaultVal:默认值\r\n */\r\nexport const getLast = (arr: unknown[] = [], defaultVal?: unknown): unknown => {\r\n  let res: unknown = defaultVal ?? \"\";\r\n  if (arr?.length) {\r\n    res = arr[arr.length - 1];\r\n  }\r\n  return res;\r\n};\r\n","/*\r\n * 常用的工具类函数\r\n * author: zhijie\r\n */\r\n\r\ntype Options = { label: unknown; value: unknown };\r\n\r\n/*\r\n * 转换成Option类型数组\r\n */\r\nexport const transToOptions = (arr: any[], labelField: string, valueField: string): Options[] => {\r\n  if (!arr || !arr.length) return [];\r\n  return (\r\n    arr.map(item => {\r\n      return { label: item[labelField] ?? \"\", value: item[valueField] ?? \"\" };\r\n    }) ?? []\r\n  );\r\n};\r\n\r\n/*\r\n * 对象重置\r\n * @targetObj: 需要操作的对象 @defaultValMap：重置默认值\r\n */\r\nexport const handleReset = (targetObj: Record<string, unknown>, defaultValMap?: Record<string, unknown>) => {\r\n  const keys: string[] = Object.keys(targetObj); // 获取目标对象所有的key\r\n  keys.forEach(key => {\r\n    const tempData: unknown = targetObj[key];\r\n    targetObj[key] =\r\n      defaultValMap && defaultValMap[key]\r\n        ? defaultValMap[key]\r\n        : Array.isArray(tempData)\r\n          ? []\r\n          : typeof tempData === \"string\"\r\n            ? \"\"\r\n            : typeof tempData === \"number\"\r\n              ? 0\r\n              : typeof tempData === \"boolean\"\r\n                ? false\r\n                : \"\";\r\n  });\r\n};\r\n","/*\r\n * 类型判断\r\n * author: zhijie\r\n */\r\n\r\n/*\r\n * 判断是否数字类型\r\n */\r\nexport const isNumber = (val: unknown): boolean => {\r\n  return typeof val === \"number\" || Object.prototype.toString.call(val) === \"[object Number]\";\r\n};\r\n\r\n/*\r\n * 判断是否字符串类型\r\n */\r\nexport const isString = (val: unknown): boolean => {\r\n  return typeof val === \"string\" || Object.prototype.toString.call(val) === \"[object String]\";\r\n};\r\n\r\n/*\r\n * 是否不为空\r\n */\r\nexport const isNotEmpty = (val: unknown): boolean => {\r\n  if (!val && val !== 0) return false; // null/undefined/0/false/''\r\n  if (Array.isArray(val) && !val.length) return false; // 空数组\r\n  if (Object.prototype.toString.call(val) === \"[object Object]\" && !Object.keys(val).length) return false; // 不是空对象\r\n  return true;\r\n};\r\n\r\n/*\r\n * 是否电话号码\r\n */\r\nexport const isMobile = (val: string | number): boolean => {\r\n  if (!val || (typeof val !== \"string\" && typeof val !== \"number\")) return false;\r\n  const regExp: RegExp = /^1[3-9]\\d{9}$/;\r\n  return regExp.test(val as string);\r\n};\r\n\r\n/*\r\n * 是否固定电话\r\n */\r\nexport const isFixedPhone = (val: string | number): boolean => {\r\n  if (!val || (typeof val !== \"string\" && typeof val !== \"number\")) return false;\r\n  const regExp = /^(\\d{3,4}[- ]?)?\\d{7,8}$/;\r\n  return regExp.test(val as string);\r\n};\r\n\r\n/*\r\n * 是否正整数\r\n */\r\nexport const isPositiveInteger = (val: string | number): boolean => {\r\n  const num = Number(val); // 将输入转换为数字\r\n  return !isNaN(num) && num > 0 && num % 1 === 0;\r\n};\r\n\r\n/*\r\n * 是否身份证号码\r\n */\r\nexport const isIdCardNo = (val: string): boolean => {\r\n  // 校验\r\n  if (!val || val.length !== 18) return false; // 校验位数\r\n  // 校验是否为全数字\r\n  if (!/^\\d{18}$/.test(val)) {\r\n    return false;\r\n  }\r\n  const checkCode: string = \"10X98765432\"; // 校验码\r\n  // 提取前17位数字\r\n  const baseId: string = val.slice(0, 17);\r\n\r\n  // 校验出生年月日\r\n  const year: string = baseId.slice(6, 4);\r\n  const month: string = baseId.slice(10, 2);\r\n  const day: string = baseId.slice(12, 2);\r\n  if (!/^\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12][0-9]|3[01])$/.test(year + month + day)) {\r\n    return false;\r\n  }\r\n  // 计算校验码\r\n  let sum: number = 0;\r\n  for (let i = 0; i < 17; i++) {\r\n    sum += parseInt(baseId.charAt(i), 10) * (i % 2 === 0 ? 1 : 3);\r\n  }\r\n  // 计算模\r\n  const mod: number = sum % 11;\r\n  // 校验最后一位\r\n  return checkCode.charAt(mod) === val.charAt(17).toUpperCase();\r\n};\r\n\r\n/*\r\n * 特殊符号校验\r\n */\r\nexport const isEmoji = (val: string): boolean => {\r\n  const emojiRegex =\r\n    /[\\u{1F600}-\\u{1F64F}\\u{1F300}-\\u{1F5FF}\\u{1F680}-\\u{1F6FF}\\u{1F1E0}-\\u{1F1FF}\\u{2600}-\\u{26FF}\\u{2700}-\\u{27BF}\\u{1F900}-\\u{1F9FF}\\u{1F910}-\\u{1F96B}\\u{1F980}-\\u{1F991}]/u;\r\n  return emojiRegex.test(val);\r\n};\r\n","/*\r\n * 浏览器storage相关\r\n */\r\n\r\n/*\r\n * 将内容设置到storage中\r\n * key: 键名 value: 值 storageName:存储区域\r\n * @return 是否操作成功\r\n */\r\nexport const setStorageItem = (\r\n  key: string,\r\n  value: unknown,\r\n  storageName: \"localStorage\" | \"sessionStorage\" = \"localStorage\"\r\n): boolean => {\r\n  if (!window[storageName]) return false;\r\n  window[storageName].setItem(key, JSON.stringify(value));\r\n  return true;\r\n};\r\n\r\n/*\r\n * 将内容设置到storage中(带过期时间)\r\n * key: 键名 value: 值 storageName:存储区域 expireTime\r\n * @return 是否操作成功\r\n */\r\nexport const setExpireStorageItem = (\r\n  key: string,\r\n  value: unknown,\r\n  storageName: \"localStorage\" | \"sessionStorage\" = \"localStorage\",\r\n  expireTime?: number\r\n): boolean => {\r\n  if (!window[storageName]) return false;\r\n  const temp: Record<string, unknown> = {\r\n    value: value, // 存储的值\r\n    expireTime: expireTime ? new Date().getTime() + expireTime : null // 过期时间\r\n  };\r\n  window[storageName].setItem(key, JSON.stringify(temp));\r\n  return true;\r\n};\r\n\r\n/*\r\n * 从storage中取值\r\n * key: 键名 storageName:存储区域\r\n * @return 对应的值或null\r\n */\r\nexport const getStorageItem = <T>(key: string, storageName: \"localStorage\" | \"sessionStorage\" = \"localStorage\"): T | null => {\r\n  if (!window[storageName]) return null;\r\n  const value = window[storageName].getItem(key);\r\n  if (value && value != \"undefined\" && value != \"null\") {\r\n    return <T>JSON.parse(value);\r\n  }\r\n  return null;\r\n};\r\n\r\n/*\r\n * 从storage中取值\r\n * key: 键名 storageName:存储区域\r\n * @return 对应的值或null\r\n */\r\nexport const getExpireStorageItem = <T>(\r\n  key: string,\r\n  storageName: \"localStorage\" | \"sessionStorage\" = \"localStorage\"\r\n): T | null => {\r\n  if (!window[storageName]) return null;\r\n  const value: string | null = window[storageName].getItem(key);\r\n  if (value) {\r\n    const storageData: any = JSON.parse(value); // 反序列化数据\r\n    if (!storageData.expireTime || new Date().getTime() < storageData.expireTime) {\r\n      // 如果没有过期或者还没有过期\r\n      return storageData.value; // 返回存储的值\r\n    } else {\r\n      window[storageName].removeItem(key); // 如果已经过期，则删除该项\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\n/*\r\n * 从storage中移除对应的值\r\n * key: 键名 storageName:存储区域\r\n * @return 是否操作成功\r\n */\r\nexport const removeStorageItem = (key: string, storageName: \"localStorage\" | \"sessionStorage\" = \"localStorage\"): boolean => {\r\n  if (!window[storageName] || !window[storageName].getItem(key)) return false;\r\n  window[storageName].removeItem(key);\r\n  return true;\r\n};\r\n\r\n/*\r\n * 从storage中移除对应的值\r\n * storageName:存储区域 如果不传storageName默认所有storage清除\r\n */\r\nexport const clearStorage = (storageName?: \"localStorage\" | \"sessionStorage\") => {\r\n  if (!storageName) {\r\n    window.localStorage.clear();\r\n    window.sessionStorage.clear();\r\n  } else {\r\n    window[storageName].clear();\r\n  }\r\n};\r\n"],"names":["uniqueArray","arr","valueField","res","map","i","len","item","getFirst","defaultVal","getLast","transToOptions","labelField","handleReset","targetObj","defaultValMap","key","tempData","isNumber","val","isString","isNotEmpty","isMobile","isFixedPhone","isPositiveInteger","num","isIdCardNo","checkCode","baseId","year","month","day","sum","mod","isEmoji","setStorageItem","value","storageName","setExpireStorageItem","expireTime","temp","getStorageItem","getExpireStorageItem","storageData","removeStorageItem","clearStorage"],"mappings":"iOASa,MAAAA,EAAc,CAACC,EAAgBC,IAAmC,CAC7E,MAAMC,EAAiB,CAAA,EACnB,GAAA,CAAC,MAAM,QAAQF,CAAG,GAAK,CAACA,GAAO,CAACA,EAAI,OAAe,OAAAE,EACjD,MAAAC,MAAU,IAEhB,QAASC,EAAI,EAAGC,EAAML,EAAI,OAAQI,EAAIC,EAAKD,IAAK,CACxC,MAAAE,EAAgBN,EAAII,CAAC,EAE3B,GAAIE,aAAgB,OAAQ,CACtB,GAAA,CAACL,EAAmB,OAAAD,EACnBG,EAAI,IAAKG,EAAiCL,CAAU,CAAC,IACxDC,EAAI,KAAKI,CAAI,EACbH,EAAI,IAAKG,EAAiCL,CAAU,EAAG,EAAI,EAC7D,MAIKE,EAAI,IAAIG,CAAI,IACfJ,EAAI,KAAKI,CAAI,EACTH,EAAA,IAAIG,EAAM,EAAI,EAGxB,CAEO,OAAAJ,CACT,EAMaK,EAAW,CAACP,EAAiB,GAAIQ,IAAkC,CAC9E,IAAIN,EAAeM,GAAc,GACjC,OAAIR,GAAA,MAAAA,EAAK,SACPE,EAAMF,EAAI,CAAC,GAENE,CACT,EAMaO,EAAU,CAACT,EAAiB,GAAIQ,IAAkC,CAC7E,IAAIN,EAAeM,GAAc,GACjC,OAAIR,GAAA,MAAAA,EAAK,SACDE,EAAAF,EAAIA,EAAI,OAAS,CAAC,GAEnBE,CACT,EChDaQ,EAAiB,CAACV,EAAYW,EAAoBV,IACzD,CAACD,GAAO,CAACA,EAAI,OAAe,CAAA,EAE9BA,EAAI,IAAYM,IACP,CAAE,MAAOA,EAAKK,CAAU,GAAK,GAAI,MAAOL,EAAKL,CAAU,GAAK,IACpE,GAAK,CAAA,EAQGW,EAAc,CAACC,EAAoCC,IAA4C,CACnF,OAAO,KAAKD,CAAS,EACvC,QAAeE,GAAA,CACZ,MAAAC,EAAoBH,EAAUE,CAAG,EAC7BF,EAAAE,CAAG,EACXD,GAAiBA,EAAcC,CAAG,EAC9BD,EAAcC,CAAG,EACjB,MAAM,QAAQC,CAAQ,EACpB,GACA,OAAOA,GAAa,SAClB,GACA,OAAOA,GAAa,SAClB,EACA,OAAOA,GAAa,UAClB,GACA,EAAA,CACf,CACH,EChCaC,EAAYC,GAChB,OAAOA,GAAQ,UAAY,OAAO,UAAU,SAAS,KAAKA,CAAG,IAAM,kBAM/DC,EAAYD,GAChB,OAAOA,GAAQ,UAAY,OAAO,UAAU,SAAS,KAAKA,CAAG,IAAM,kBAM/DE,EAAcF,GACrB,GAACA,GAAOA,IAAQ,GAChB,MAAM,QAAQA,CAAG,GAAK,CAACA,EAAI,QAC3B,OAAO,UAAU,SAAS,KAAKA,CAAG,IAAM,mBAAqB,CAAC,OAAO,KAAKA,CAAG,EAAE,QAOxEG,EAAYH,GACnB,CAACA,GAAQ,OAAOA,GAAQ,UAAY,OAAOA,GAAQ,SAAkB,GAClD,gBACT,KAAKA,CAAa,EAMrBI,EAAgBJ,GACvB,CAACA,GAAQ,OAAOA,GAAQ,UAAY,OAAOA,GAAQ,SAAkB,GAC1D,2BACD,KAAKA,CAAa,EAMrBK,EAAqBL,GAAkC,CAC5D,MAAAM,EAAM,OAAON,CAAG,EACtB,MAAO,CAAC,MAAMM,CAAG,GAAKA,EAAM,GAAKA,EAAM,IAAM,CAC/C,EAKaC,EAAcP,GAAyB,CAIlD,GAFI,CAACA,GAAOA,EAAI,SAAW,IAEvB,CAAC,WAAW,KAAKA,CAAG,EACf,MAAA,GAET,MAAMQ,EAAoB,cAEpBC,EAAiBT,EAAI,MAAM,EAAG,EAAE,EAGhCU,EAAeD,EAAO,MAAM,EAAG,CAAC,EAChCE,EAAgBF,EAAO,MAAM,GAAI,CAAC,EAClCG,EAAcH,EAAO,MAAM,GAAI,CAAC,EACtC,GAAI,CAAC,iDAAiD,KAAKC,EAAOC,EAAQC,CAAG,EACpE,MAAA,GAGT,IAAIC,EAAc,EAClB,QAAS3B,EAAI,EAAGA,EAAI,GAAIA,IACf2B,GAAA,SAASJ,EAAO,OAAOvB,CAAC,EAAG,EAAE,GAAKA,EAAI,IAAM,EAAI,EAAI,GAG7D,MAAM4B,EAAcD,EAAM,GAEnB,OAAAL,EAAU,OAAOM,CAAG,IAAMd,EAAI,OAAO,EAAE,EAAE,aAClD,EAKae,EAAWf,GAEpB,6KACgB,KAAKA,CAAG,ECpFfgB,EAAiB,CAC5BnB,EACAoB,EACAC,EAAiD,iBAE5C,OAAOA,CAAW,GACvB,OAAOA,CAAW,EAAE,QAAQrB,EAAK,KAAK,UAAUoB,CAAK,CAAC,EAC/C,IAF0B,GAUtBE,EAAuB,CAClCtB,EACAoB,EACAC,EAAiD,eACjDE,IACY,CACZ,GAAI,CAAC,OAAOF,CAAW,EAAU,MAAA,GACjC,MAAMG,EAAgC,CACpC,MAAAJ,EACA,WAAYG,EAAa,IAAI,KAAO,EAAA,QAAA,EAAYA,EAAa,IAAA,EAE/D,cAAOF,CAAW,EAAE,QAAQrB,EAAK,KAAK,UAAUwB,CAAI,CAAC,EAC9C,EACT,EAOaC,EAAiB,CAAIzB,EAAaqB,EAAiD,iBAA6B,CAC3H,GAAI,CAAC,OAAOA,CAAW,EAAU,OAAA,KACjC,MAAMD,EAAQ,OAAOC,CAAW,EAAE,QAAQrB,CAAG,EAC7C,OAAIoB,GAASA,GAAS,aAAeA,GAAS,OAClC,KAAK,MAAMA,CAAK,EAErB,IACT,EAOaM,EAAuB,CAClC1B,EACAqB,EAAiD,iBACpC,CACb,GAAI,CAAC,OAAOA,CAAW,EAAU,OAAA,KACjC,MAAMD,EAAuB,OAAOC,CAAW,EAAE,QAAQrB,CAAG,EAC5D,GAAIoB,EAAO,CACH,MAAAO,EAAmB,KAAK,MAAMP,CAAK,EACrC,GAAA,CAACO,EAAY,YAAc,IAAI,OAAO,QAAA,EAAYA,EAAY,WAEhE,OAAOA,EAAY,MAEZ,OAAAN,CAAW,EAAE,WAAWrB,CAAG,CAEtC,CACO,OAAA,IACT,EAOa4B,EAAoB,CAAC5B,EAAaqB,EAAiD,iBAC1F,CAAC,OAAOA,CAAW,GAAK,CAAC,OAAOA,CAAW,EAAE,QAAQrB,CAAG,EAAU,IAC/D,OAAAqB,CAAW,EAAE,WAAWrB,CAAG,EAC3B,IAOI6B,EAAgBR,GAAoD,CAC1EA,EAII,OAAAA,CAAW,EAAE,SAHpB,OAAO,aAAa,QACpB,OAAO,eAAe,QAI1B"}
